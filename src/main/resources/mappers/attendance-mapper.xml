<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="attendanceMapper">

	<resultMap id="attendanceResult" type="Attendance">
		<result column="att_no" property="attNo"/>
		<result column="emp_no" property="empNo"/>
		<result column="att_date" property="attDate"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="status" property="status"/>
		<result column="total_time" property="totalTIme"/>
		<result column="over_time" property="overTime"/>
		<result column="modify_date" property="modifyDate"/>
		<result column="modify_no" property="modifyNo"/>
	</resultMap>
	
	<resultMap id="vacationResult" type="Vacation">
		<result column="app_no" property="appNo"/>
		<result column="emp_no" property="empNo"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="vac_days" property="vacDays"/>
		<result column="vac_cause" property="vacCause"/>
		<result column="status" property="status"/> 
	</resultMap>
	
	<select id="selectListCount" resultType="_int">
	SELECT COUNT(*)
	  FROM (
	        SELECT
	               NVL(EMP_NO, #{empNo})
	             , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD'))
	             , START_TIME
	             , END_TIME
	             , NVL(STATUS, 'N')
	          FROM ATTENDANCE
	         RIGHT JOIN (
	                    SELECT TRUNC(TO_DATE(SYSDATE), 'MM') + LEVEL - 1 "WORKING_DAY"
	                         , TO_CHAR(TRUNC(SYSDATE, 'MM') + LEVEL - 1, 'DY') "WEEK"
	                      FROM DUAL
	                    CONNECT BY LEVEL &lt;= TO_CHAR(LAST_DAY(TO_DATE(SYSDATE)), 'DD')
	                    ) ON (ATT_DATE = WORKING_DAY)
	         WHERE WORKING_DAY &lt; TO_DATE(SYSDATE)
	           AND NVL(EMP_NO, #{empNo}) = #{empNo}
	           AND WEEK IN ('월', '화', '수', '목', '금')
	         <choose>
			 	<when test='startDate != null and endDate != null and !startDate.equals("") and !endDate.equals("")'>
			 	   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) BETWEEN TO_DATE(#{startDate}) AND TO_DATE(#{endDate})
			 	</when>
			 	<when test="startDate != null and !startDate.equals('')">
			 	   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) = TO_DATE(#{startDate})
			 	</when>
			 	<when test="endDate != null and !endDate.equals('')">
			 	   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) = TO_DATE(#{endDate})
			 	</when>
			 	<otherwise>
			 	</otherwise>
		 	 </choose>
			 <if test='statusArr != null'>
			   AND NVL(STATUS, 'N') IN
			   <foreach item="item" index="index" collection="statusArr" open="(" separator="," close=")">
			   	#{item}
			   </foreach>
			 </if>
	         ORDER BY WORKING_DAY
	        )
	</select>
	
	<select id="selectAttendance" resultMap="attendanceResult">
		SELECT
		       NVL(EMP_NO, #{empNo}) "emp_no"
		     , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) "att_date"
		     , NVL(START_TIME, ' ') as "start_time"
			 , NVL(END_TIME, ' ') as "end_time"
		     , NVL(STATUS, 'N') "status"
		  FROM ATTENDANCE
		 RIGHT JOIN (
		            SELECT TRUNC(TO_DATE(SYSDATE), 'MM') + LEVEL - 1 "WORKING_DAY"
		                 , TO_CHAR(TRUNC(SYSDATE, 'MM') + LEVEL - 1, 'DY') "WEEK"
		              FROM DUAL
		            CONNECT BY LEVEL &lt;= TO_CHAR(LAST_DAY(TO_DATE(SYSDATE)), 'DD')
		            ) ON (ATT_DATE = WORKING_DAY)
		 WHERE WORKING_DAY &lt; TO_DATE(SYSDATE)
		   AND NVL(EMP_NO, #{empNo}) = #{empNo}
		   AND WEEK IN ('월', '화', '수', '목', '금')
		   <!-- 
		   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) BETWEEN TO_DATE('2022-09-01') AND TO_DATE(SYSDATE)
		   AND NVL(STATUS, 'N') IN ('Y', 'L', 'E', 'N')
		    -->
		   <choose>
			 	<when test='startDate != null and endDate != null and !startDate.equals("") and !endDate.equals("")'>
			 	   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) BETWEEN TO_DATE(#{startDate}) AND TO_DATE(#{endDate})
			 	</when>
			 	<when test="startDate != null and !startDate.equals('')">
			 	   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) = TO_DATE(#{startDate})
			 	</when>
			 	<when test="endDate != null and !endDate.equals('')">
			 	   AND NVL(TO_DATE(ATT_DATE), WORKING_DAY) = TO_DATE(#{endDate})
			 	</when>
			 	<otherwise>
			 	</otherwise>
		 	 </choose>
			 <if test='statusArr != null'>
			   AND NVL(STATUS, 'N') IN
			   <foreach item="item" index="index" collection="statusArr" open="(" separator="," close=")">
			   	#{item}
			   </foreach>
			 </if>
		 ORDER BY WORKING_DAY DESC
	</select>
	
	<insert id="insertAttendance">
		insert 
		  into attendance
		  (
		    att_no
		  , emp_no
		  , att_date
		  , start_time
		  )
		  values
		  (
		    seq_attno.nextval
		  , #{empNo}
		  , to_char(sysdate, 'YYYY-MM-DD')
		  , to_char(sysdate, 'HH:MI')
		  )
	</insert>
	
	<select id="selectStartTime" resultType="String">
		select start_time
		  from attendance
		 where emp_no = #{empNo}
		   and att_date = to_char(sysdate, 'YYYY-MM-DD')
	</select>
	
	<select id="selectEndTime" resultType="String">
		select
		       end_time
		  from attendance
		 where emp_no = #{empNo}
		   and att_date = to_char(sysdate, 'YYYY-MM-DD')
	</select>
	
	<update id="endAttendance">
		update attendance
		   set end_time = to_char(sysdate, 'HH24:MI')
		   	 , total_time = ( to_date(end_time, 'HH24:MI') - to_date(start_time, 'HH24:MI') ) * 24 * 60 - 60
		     , status = 
		     case when end_time >= '18:00' then 'Y'
		     	  when start_time >= '09:00' then 'L'
		     end
		 where emp_no = #{empNo}
		   and att_date = to_char(sysdate, 'YYYY-MM-DD')
	</update>
	
	<!-- 휴가 총 개수 조회 -->
	<select id="selectVacListCount" resultType="_int">
		select
			   count(*)
		  from vacation
		 where emp_no = #{empNo}
	</select>
	
	<!-- 휴가 리스트 조회 -->
	<select id="selectVacationList" resultMap="vacationResult">
		select
		       app_no "app_no"
		     , v.emp_no "emp_no"
		     , to_char(v.enroll_date, 'YYYY-MM-DD') "enroll_date"
		     , to_char(start_date, 'YYYY-MM-DD') "start_date"
		     , to_char(end_date, 'YYYY-MM-DD') "end_date"
		     , vac_cause "vac_cause"
		     , appr_status "status"
		  from vacation v
		  join approval on (app_no = appr_no)
		 where v.emp_no = #{empNo}
		 order
		    by app_no desc
	</select>
	
	<!-- 휴가 잔여일수 조회 -->
	<select id="selectVacRemain" resultType="_int">
		select 20 - nvl( sum(vac_days), 0)
		  from vacation v
		  join approval on (app_no = appr_no)
		 where v.emp_no = #{empNo}
		   and appr_status = '완료'
	</select>
</mapper>
